# 姓名: 金雅各		学号: 1120201316	班级: 07112002

#  Execution begins at address 0
.pos 0 
	irmovq stack, %rsp		# Set up stack pointer 
	call main		 	# Execute main program	
	halt			# Terminal program

# Sample linked list 
	.align 8 			# 设置数据对齐方式为8字节
ele1: 
	.quad 0x00a 
	.quad ele2 
ele2: 
	.quad 0x0b0 
	.quad ele3 
ele3: 
	.quad 0xc00 
	.quad 0
	
main:
	irmovq	ele1, %rdi			# 将链表第一个元素的地址当作参数
	call 	rsum_list			# sum_list(ele1) 
	ret
	
	
# 	long rsum_list(list_ptr ls)
rsum_list:
	pushq %rbx			# 使用被调用者保护寄存器
	xorq %rax, %rax			# 求和的值最后放在寄存器rax 中
test:
	andq %rdi, %rdi			# 判断传入的指针是否为空
	je  return				# 若为空直接返回0

	mrmovq (%rdi), %rbx		# 读入数据 ls->val
	mrmovq 8(%rdi), %rdi		# 更新链表指针 ls = ls->next
	call rsum_list			# 递归调用 rsum_list
	addq %rbx, %rax			# 更新rax=rax+ rsum_list()
return:
	popq %rbx			# 恢复 rbx
	ret
# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
	
