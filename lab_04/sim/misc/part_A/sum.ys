# 姓名: 金雅各		学号: 1120201316	班级: 07112002

#  Execution begins at address 0
.pos 0 
	irmovq stack, %rsp	 # Set up stack pointer 
	call main		 # Execute main program	
	halt		 # Terminal program

# Sample linked list 
	.align 8 		# 设置数据对齐方式为8字节
ele1: 			# 链表头地址
	.quad 0x00a 
	.quad ele2 
ele2: 
	.quad 0x0b0 
	.quad ele3 
ele3: 
	.quad 0xc00 
	.quad 0
	
main:
	irmovq	ele1, %rdi			# 将链表第一个元素的地址当作参数
	call 	sum_list			# sum_list(ele1) 
	ret
	
	
# 	long sum_list(list_ptr ls)
sum_list:
	pushq  	%rbx			# 使用被调用者保护寄存器
	xorq 	%rax, %rax		# 求和的值最后放在寄存器rax 中
	jmp 	test			# while()循环
loop:
	mrmovq	 (%rdi), %rbx		# 读入数据 ls->val
	addq	 %rbx, %rax		#
	mrmovq 	 8(%rdi), %rdi		# 更新链表指针 ls = ls->next
test:
	andq %rdi, %rdi			# 测试 %rdi 是否为空
	jne  loop
	popq	%rbx			# 恢复寄存器rbx
	ret
# Stack starts here and grows to lower addresses
	.pos 0x200			# 栈起始位置
stack:
	
